# This is a basic workflow to help you get started with Actions

name: WARPER-VERSION-TRIGGER

# Controls when the action will run.
on:
  # Allows you to run this workflow manually from the Actions tab
  repository_dispatch:
    types: [trigger]
jobs:
  # This workflow contains a single job called "build"
  test_and_build:
    if: "github.event.client_payload.action == 'dev-version'"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: setup git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: version
        run: |
          git checkout -f -b version-branch
          echo ${{github.event.client_payload.version}} > ${{github.event.client_payload.wrapper}}-wrapper-version.txt
          git add  ${{github.event.client_payload.wrapper}}-wrapper-version.txt
          git commit -m "update ${{github.event.client_payload.wrapper}} version [skip ci]"
          npm version patch -m "$(git log -1 --pretty=%B) .... bump version [skip ci]"       
          git push origin version-branch:main --follow-tags
      - name: update nodejs package.json for build
        run: |
          export packageJSONTemplate=`cat scripts/packages/package.json`
          export version=`cat nodejs-wrapper-version.txt`
          npm run update-package-json>scripts/packages/package.json

      - name: build
        run: |
          docker login --username yehiyam --password ${DOCKER_HUB_PASS}
          PRIVATE_REGISTRY=docker.io/hkube npm run build
        env:
          DOCKER_HUB_PASS: ${{ secrets.DOCKER_PASSWORD }}
      - name: create java pr in hkube
        if: "github.event.client_payload.wrapper == 'java'"
        run: |
          npm install --no-package-lock --no-save @octokit/rest@^18.0.0
          npm run update-file
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          updatedFilePath: "core/algorithm-builder/environments/java/wrapper/version.txt"
          fileContent: "${{github.event.client_payload.version}}"
          wrapper: "java"
          repository: "hkube"
          targetBranch: "master"
      - name: create python pr in hkube
        if: "github.event.client_payload.wrapper == 'python'"
        run: |
          npm install --no-package-lock --no-save @octokit/rest@^18.0.0
          npm run update-file
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          updatedFilePath: "core/algorithm-builder/environments/python/wrapper/requirements.txt"
          fileContent: "hkube-python-wrapper==${{github.event.client_payload.version}}"
          wrapper: "python"
          repository: "hkube"
          targetBranch: "master"

      - name: create nodejs pr in hkube
        if: "github.event.client_payload.wrapper == 'nodejs'"
        run: |
          export version=`cat nodejs-wrapper-version.txt`
          npm install --no-package-lock --no-save @octokit/rest@^18.0.0
          npm run update-nodejs-in-builder
          ./scripts/invokeByDocker.sh package-lock-update.sh
          npm run create-nodejs-pr
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          updatedFilePath: "core/algorithm-builder/environments/nodejs/wrapper/package.json;core/algorithm-gateway/package.json;core/algorithm-debug/package.json;core/algorithm-output/package.json"
